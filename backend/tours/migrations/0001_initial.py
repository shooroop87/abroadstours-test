# Generated by Django 4.2.11 on 2025-08-19 15:08

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=10)),
                ('tour_type', models.CharField(choices=[('wine_tour', 'Wine Tour'), ('city_tour', 'City Tour'), ('nature_tour', 'Nature Tour'), ('cultural_tour', 'Cultural Tour'), ('adventure_tour', 'Adventure Tour'), ('food_tour', 'Food Tour'), ('custom', 'Custom')], default='custom', max_length=20)),
                ('duration_hours', models.IntegerField(default=8, help_text='Duration in hours')),
                ('duration_minutes', models.IntegerField(default=0, help_text='Additional minutes (0-59)')),
                ('max_group_size', models.IntegerField(default=19, help_text='Maximum number of participants')),
                ('price_adult', models.DecimalField(decimal_places=2, help_text='Price per adult in EUR', max_digits=8)),
                ('price_child', models.DecimalField(blank=True, decimal_places=2, help_text='Price per child in EUR (optional)', max_digits=8, null=True)),
                ('price_private', models.DecimalField(blank=True, decimal_places=2, help_text='Private tour price in EUR (optional)', max_digits=8, null=True)),
                ('free_cancellation', models.BooleanField(default=True)),
                ('reserve_now_pay_later', models.BooleanField(default=True)),
                ('instant_confirmation', models.BooleanField(default=True)),
                ('languages', models.CharField(default='English', help_text="Comma-separated languages (e.g., 'English, Italian, French')", max_length=200)),
                ('featured_image', models.ImageField(help_text='Main tour image (recommended: 1200x800px)', upload_to='tours/featured/')),
                ('rating', models.DecimalField(decimal_places=2, default=5.0, help_text='Tour rating (0.00-5.00)', max_digits=3)),
                ('reviews_count', models.IntegerField(default=0, help_text='Number of reviews')),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('booking_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured Tour')),
                ('sort_order', models.IntegerField(default=0, help_text='Lower numbers appear first')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tours', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tour',
                'verbose_name_plural': 'Tours',
                'ordering': ['-is_featured', 'sort_order', '-created_at'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(default='icon-mountain', help_text='CSS class for category icon (e.g., icon-wine, icon-mountain)', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0, help_text='Lower numbers appear first')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tour Category',
                'verbose_name_plural': 'Tour Categories',
                'ordering': ['sort_order', 'translations__name'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourDifficulty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('level', models.IntegerField(help_text='1=Easy, 2=Moderate, 3=Challenging, 4=Difficult, 5=Expert')),
                ('icon', models.CharField(default='icon-difficulty', max_length=50)),
                ('color', models.CharField(default='#46b450', help_text='Hex color code', max_length=7)),
            ],
            options={
                'verbose_name': 'Difficulty Level',
                'verbose_name_plural': 'Difficulty Levels',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='TourFAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='tours.tour')),
            ],
            options={
                'verbose_name': 'Tour FAQ',
                'verbose_name_plural': 'Tour FAQs',
                'ordering': ['sort_order', 'created_at'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourMeetingPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_time', models.TimeField(help_text='Meeting time (e.g., 08:55)')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('google_maps_url', models.URLField(blank=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('is_primary', models.BooleanField(default=False, help_text='Primary meeting point')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_points', to='tours.tour')),
            ],
            options={
                'verbose_name': 'Meeting Point',
                'verbose_name_plural': 'Meeting Points',
                'ordering': ['sort_order', 'meeting_time'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100)),
                ('author_location', models.CharField(blank=True, max_length=100)),
                ('author_avatar', models.ImageField(blank=True, upload_to='tours/reviews/')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Rating from 1 to 5 stars')),
                ('review_date', models.DateField()),
                ('is_featured', models.BooleanField(default=False, help_text='Show in featured reviews')),
                ('is_verified', models.BooleanField(default=True, help_text='Verified review')),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='tours.tour')),
            ],
            options={
                'verbose_name': 'Tour Review',
                'verbose_name_plural': 'Tour Reviews',
                'ordering': ['-is_featured', 'sort_order', '-review_date'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='tours/gallery/')),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('caption', models.CharField(blank=True, max_length=300)),
                ('sort_order', models.IntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False, help_text='Show in main gallery grid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='tours.tour')),
            ],
            options={
                'verbose_name': 'Tour Image',
                'verbose_name_plural': 'Tour Images',
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='tour',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tours.tourcategory'),
        ),
        migrations.AddField(
            model_name='tour',
            name='difficulty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tours.tourdifficulty'),
        ),
        migrations.AddField(
            model_name='tour',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='BookingCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_system', models.CharField(choices=[('rezdy', 'Rezdy'), ('custom', 'Custom HTML'), ('none', 'No Booking System')], default='rezdy', max_length=50)),
                ('html_code', models.TextField(blank=True, help_text='Full HTML code for booking widget')),
                ('additional_scripts', models.TextField(blank=True, help_text='Additional JavaScript code if needed')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tour', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='booking_code', to='tours.tour')),
            ],
            options={
                'verbose_name': 'Booking Code',
                'verbose_name_plural': 'Booking Codes',
            },
        ),
        migrations.CreateModel(
            name='TourTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Tour Title')),
                ('slug', models.SlugField(max_length=250, unique=True, verbose_name='URL Slug')),
                ('short_description', models.CharField(help_text='Brief description for tour cards and previews', max_length=300)),
                ('tour_highlights', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Key selling points and highlights of the tour', verbose_name='Tour Highlights')),
                ('why_unique', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='What makes this tour special and different', verbose_name='Why This Tour Is Unique')),
                ('what_experience', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Detailed description of the tour experience', verbose_name="What You'll Experience")),
                ('whats_included', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='List of included services and features', verbose_name="What's Included")),
                ('whats_not_included', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='List of services not included in the price', verbose_name="What's Not Included")),
                ('meeting_points', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Detailed meeting point information with addresses and times', verbose_name='Meeting Points')),
                ('private_tour_info', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Information about private tour options and pricing', verbose_name='Private Tour Information')),
                ('meta_title', models.CharField(blank=True, help_text='SEO title (max 60 chars). Leave blank to use tour title.', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='Meta description for search engines (max 160 chars)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords, separated by commas', max_length=255)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='tours.tour')),
            ],
            options={
                'verbose_name': 'Tour Translation',
                'db_table': 'tours_tour_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourReviewTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Review Title')),
                ('content', models.TextField(verbose_name='Review Content')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='tours.tourreview')),
            ],
            options={
                'verbose_name': 'Tour Review Translation',
                'db_table': 'tours_tourreview_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourMeetingPointTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=200, verbose_name='Meeting Point Name')),
                ('address', models.TextField(verbose_name='Full Address')),
                ('description', models.TextField(blank=True, help_text='Additional directions or landmarks', verbose_name='Additional Instructions')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='tours.tourmeetingpoint')),
            ],
            options={
                'verbose_name': 'Meeting Point Translation',
                'db_table': 'tours_tourmeetingpoint_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourFAQTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('question', models.CharField(max_length=300, verbose_name='Question')),
                ('answer', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Answer')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='tours.tourfaq')),
            ],
            options={
                'verbose_name': 'Tour FAQ Translation',
                'db_table': 'tours_tourfaq_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourCategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='URL Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='tours.tourcategory')),
            ],
            options={
                'verbose_name': 'Tour Category Translation',
                'db_table': 'tours_tourcategory_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.AddIndex(
            model_name='tour',
            index=models.Index(fields=['status', 'is_featured'], name='tours_tour_status_364be1_idx'),
        ),
        migrations.AddIndex(
            model_name='tour',
            index=models.Index(fields=['category', 'status'], name='tours_tour_categor_063e3a_idx'),
        ),
    ]
